swagger: '2.0'
info:
  title: Living Progress - Build - Mentor Me
  description: Living Progress - Build - Mentor Me API.
  version: "1.0.0"
# the sample made up domain of the service
host: api.mentorme.com
# array of all schemes the API supports
schemes:
  - http
  - https
# will be prefixed to all paths
securityDefinitions:
  basicAuth:
    type: basic
# HTTP Basic Authentication. Works over `HTTP` and `HTTPS`
produces:
  - application/json
paths:
  /institutions/{id}:
    get:
      tags:
        - Institution
      summary: get institution
      description: This endpoint is responsible for getting institution
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Institutions
          schema:
            $ref: '#/definitions/Institution'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Institution
      summary: update institution
      description: This endpoint is responsible for updating institution
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: body
          in: body
          description: The institution to update
          schema:
            $ref: '#/definitions/Institution'
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/Institution'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Institution
      summary: delte institution
      description: This endpoint is responsible for deleting institution
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutions:
    get:
          tags:
            - Institution
          summary: search for entities
          description: This endpoint is responsible for searching by criteria. For the rest of the criteria params see TCUML.
          security:
          - basicAuth: []
          parameters:
            - name: institutionName
              in: query
              description: The institution Name
              type: string
              required: false
            - name: parentOrganization
              in: query
              description: The parent organization
              type: string
              required: false
            - name: location
              in: query
              description: The location
              type: string
              required: false
            - name: email
              in: query
              description: The email
              type: string
              required: false
            - name: description
              in: query
              description: The description
              type: string
              required: false
            - name: status
              in: query
              description: The status
              type: string
              required: false
            - name: pageNumber
              in: query
              description: The page number
              type: number
              format: int32
              required: false
            - name: pageSize
              in: query
              description: The page size
              type: number
              format: int32
              required: false
            - name: sortColumn
              in: query
              description: The sort column
              type: string
              required: false
            - name: sortOrder
              in: query
              description: The sort order
              type: string
              required: false
          responses:
            200:
              description: The response containing the Institutions
              schema:
                $ref: '#/definitions/InstitutionSearchResult'
            400:
              description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
              schema:
                $ref: '#/definitions/Error'
            401:
              description: Authentication Error - if token is missing or invalid
              schema:
                $ref: '#/definitions/Error'
            403:
              description: Access Denied Error - if forbidden to access
              schema:
                $ref: '#/definitions/Error'
            500:
              description: Internal server error - if the request was properly formatted, but the operation failed on the server side
              schema:
                $ref: '#/definitions/Error'
            default:
              description: Unexpected error.
              schema:
                $ref: '#/definitions/Error'
    post:
      tags:
        - Institution
      summary: create institution
      description: This endpoint is responsible for creating institution
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The institution to create
          schema:
            $ref: '#/definitions/InstitutionCreateBody'
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/Institution'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutions/{id}/generateAffiliationCode:
    put:
      tags:
        - Institution
      summary: get generated institution affiliation code
      description: This endpoint is responsible for getting institution affiliation code
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the code
          schema:
            type: string
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutions/affiliationCode/{affiliationCode}:
    get:
      tags:
        - Institution
      summary: get  institution for affiliation code
      description: This endpoint is responsible for getting institution for affiliation code
      security:
        - basicAuth: []
      parameters:
        - name: affiliationCode
          in: path
          description: The affiliation code
          type: string
          required: true
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/Institution'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutions/useAffiliationCode:
    put:
      tags:
        - Institution
      summary: use affiliation code
      description: This endpoint is responsible for setting used flag for affiliation code
      security:
        - basicAuth: []
      parameters:
        - name: affiliationCode
          in: query
          description: The affiliation code
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutions/{id}/summary:
    get:
      tags:
        - Institution
      summary: get the summary
      description: This endpoint is responsible for getting institution summary
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionSummary
          schema:
            $ref: '#/definitions/InstitutionSummary'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /institutionalPrograms/{id}:
    get:
      tags:
        - InstitutionalProgram
      summary: get institutionalProgram
      description: This endpoint is responsible for getting institutionalProgram
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionalProgram
          schema:
            $ref: '#/definitions/InstitutionalProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - InstitutionalProgram
      summary: update institutionalProgram
      description: This endpoint is responsible for updating institutionalProgram
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: number
          required: true
        - name: programName
          in: formData
          description: The program name
          type: string
        - name: startDate
          in: formData
          description: The start date
          type: string
        - name: endDate
          in: formData
          description: The end date
          type: string
        - name: institution.id
          in: formData
          description: The institution id
          type: number
        - name: programCategory.id
          in: formData
          description: The program category id
          type: number
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: programImageUrl
          in: formData
          description: The program image url
          type: string
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/InstitutionalProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - InstitutionalProgram
      summary: delte institution
      description: This endpoint is responsible for deleting institutionalProgram
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
  
  /institutionalPrograms/{id}/clone:
    post:
      tags:
        - InstitutionalProgram
      summary: clone institutionalProgram as menteeMentorProgram
      description: This endpoint is responsible for cloning the institutionalProgram and create a menteeMentorProgram instance.
      security:
      - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: body
          in: body
          description: The mentee mentor ids
          schema:
            $ref: '#/definitions/MenteeMentorIds'
      responses:
        200:
          description: The response containing the MenteeMentorProgram
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionalPrograms:
    get:
      tags:
        - InstitutionalProgram
      summary: search for entities
      description: This endpoint is responsible for searching by criteria. See the rest of available params in TCUML.
      security:
      - basicAuth: []
      parameters:
        - name: programName
          in: query
          description: The program Name
          type: string
          required: false
        - name: institutionId
          in: query
          description: The institution id
          type: number
          format: int32
          required: false
        - name: programCategory.id
          in: query
          description: The program category id
          type: number
          format: int32
          required: false
        - name: minDurationInDays
          in: query
          description: The min duration in days
          type: number
          format: int32
          required: false
        - name: maxDurationInDays
          in: query
          description: The max duration in days
          type: number
          format: int32
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
        - name: locale
          in: query
          description: the locale of the programs
          type: string
          required: false
      responses:
        200:
          description: The response containing the InstitutionalPrograms
          schema:
            $ref: '#/definitions/InstitutionalProgramSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - InstitutionalProgram
      summary: create institutionalProgram
      description: This endpoint is responsible for creating institutionalProgram
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: programName
          in: formData
          description: The program name
          type: string
        - name: startDate
          in: formData
          description: The start date
          type: string
        - name: endDate
          in: formData
          description: The end date
          type: string
        - name: institution.id
          in: formData
          description: The institution id
          type: number
        - name: programCategory.id
          in: formData
          description: The program category id
          type: number
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: programImageUrl
          in: formData
          description: The program image url
          type: string
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/InstitutionalProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionalPrograms/{id}/mentees:
    get:
      tags:
        - InstitutionalProgram
      summary: get institutionalProgram mentees
      description: This endpoint is responsible for getting institutionalProgram mentees
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Mentees
          schema:
            type: array
            items:
              $ref: '#/definitions/Mentee'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionalPrograms/{id}/mentors:
    get:
      tags:
        - InstitutionalProgram
      summary: get institutionalProgram mentors
      description: This endpoint is responsible for getting institutionalProgram mentors
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Mentors
          schema:
            type: array
            items:
              $ref: '#/definitions/Mentor'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /documents/{entityType}/{entityId}:
    post:
      tags:
        - Document
      summary: add documents to the entity
      description: Add documents to the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
        - name: files
          in: formData
          description: The uploaded documents
          required: true
          type: file
      responses:
        200:
          description: The response containing the added documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    get:
      tags:
        - Document
      summary: get documents associated to the entity
      description: Get documents associated to the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
      responses:
        200:
          description: The response containing the associated documents
          schema:
            type: array
            items:
              $ref: '#/definitions/Document'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /documents/{entityType}/{entityId}/document/{documentId}:
    delete:
      tags:
        - Document
      summary: remove the document from the entity
      description: Remove the document from the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
        - name: documentId
          in: path
          description: The document id.
          type: string
          required: true
      responses:
        200:
          description: The response containing the associated documents
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /usefulLinks/{entityType}/{entityId}:
    post:
      tags:
        - UsefulLink
      summary: add usefulLinks to the entity
      description: Add usefulLinks to the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
        - name: usefulLink
          in: body
          description: The usefulLink to add
          required: true
          schema:
            $ref: '#/definitions/UsefulLink'
      responses:
        200:
          description: The response containing the added usefulLinks
          schema:
            type: array
            items:
              $ref: '#/definitions/UsefulLink'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    get:
      tags:
        - UsefulLink
      summary: get usefulLinks associated to the entity
      description: Get usefulLinks associated to the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
      responses:
        200:
          description: The response containing the associated usefulLinks
          schema:
            type: array
            items:
              $ref: '#/definitions/UsefulLink'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /usefulLinks/{entityType}/{entityId}/link/{linkId}:
    delete:
      tags:
        - UsefulLink
      summary: remove the link from the entity
      description: Remove the link from the entity
      security:
        - basicAuth: []
      parameters:
        - name: entityType
          in: path
          description: The entity type. Can be MenteeMentorProgram or MenteeMentorGoal.
          type: string
          required: true
        - name: entityId
          in: path
          description: The entity id.
          type: string
          required: true
        - name: linkId
          in: path
          description: The link id.
          type: string
          required: true
      responses:
        200:
          description: The response containing the associated usefulLinks
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /goals/{id}:
    get:
      tags:
        - Goal
      summary: get goal
      description: This endpoint is responsible for getting goal
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Goal
          schema:
            $ref: '#/definitions/Goal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Goal
      summary: update Goal
      description: This endpoint is responsible for updating Goal
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: subject
          in: formData
          description: The subject
          type: string
        - name: description
          in: formData
          description: The description
          type: string
        - name: number
          in: formData
          description: The number
          type: number
        - name: institutionalProgramId
          in: formData
          description: The institution program id
          type: number
        - name: goalCategory.id
          in: formData
          description: The goal category id
          type: number
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: custom
          in: formData
          description: The custom
          type: boolean
        - name: customData.mentor.id
          in: formData
          description: The custom mentor id
          type: number
        - name: customData.mentee.id
          in: formData
          description: The custom mentee id
          type: number
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Goal
          schema:
            $ref: '#/definitions/Goal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Goal
      summary: delete Goal
      description: This endpoint is responsible for deleting Goal
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /goals:
    get:
      tags:
        - Goal
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
         - name: institutionalProgramId
           in: query
           description: The institution program id
           type: number
           required: false
         - name: description
           in: query
           description: The description
           type: string
           required: false
         - name: subject
           in: query
           description: The subject
           type: string
           required: false
         - name: custom
           in: query
           description: The custom flag
           type: boolean
           required: false
         - name: pageNumber
           in: query
           description: The page number
           type: number
           format: int32
           required: false
         - name: pageSize
           in: query
           description: The page size
           type: number
           format: int32
           required: false
         - name: sortColumn
           in: query
           description: The sort column
           type: string
           required: false
         - name: sortOrder
           in: query
           description: The sort order
           type: string
           required: false
      responses:
        200:
          description: The response containing the InstitutionalPrograms
          schema:
            $ref: '#/definitions/GoalSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - Goal
      summary: create Goal
      description: This endpoint is responsible for creating Goal
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: subject
          in: formData
          description: The subject
          type: string
        - name: description
          in: formData
          description: The description
          type: string
        - name: number
          in: formData
          description: The number
          type: number
        - name: institutionalProgramId
          in: formData
          description: The institution program id
          type: number
        - name: goalCategory.id
          in: formData
          description: The goal category id
          type: number
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: custom
          in: formData
          description: The custom
          type: boolean
        - name: customData.mentor.id
          in: formData
          description: The custom mentor id
          type: number
        - name: customData.mentee.id
          in: formData
          description: The custom mentee id
          type: number
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Goal
          schema:
            $ref: '#/definitions/Goal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /tasks/{id}:
    get:
      tags:
        - Task
      summary: get task
      description: This endpoint is responsible for getting task
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Task
          schema:
            $ref: '#/definitions/Task'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Task
      summary: update Task
      description: This endpoint is responsible for updating Task
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: description
          in: formData
          description: The description
          type: string
        - name: number
          in: formData
          description: The number
          type: number
        - name: goalId
          in: formData
          description: The goal id
          type: number
        - name: mentorAssignment
          in: formData
          description: The mentor assignment
          type: boolean
        - name: menteeAssignment
          in: formData
          description: The mentee assignment
          type: boolean
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: custom
          in: formData
          description: The custom
          type: boolean
        - name: customData.mentor.id
          in: formData
          description: The custom mentor id
          type: number
        - name: customData.mentee.id
          in: formData
          description: The custom mentee id
          type: number
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Task
          schema:
            $ref: '#/definitions/Task'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Task
      summary: delete Task
      description: This endpoint is responsible for deleting Task
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /tasks:
    get:
      tags:
        - Task
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
         - name: goalId
           in: query
           description: The goal id
           type: number
           required: false
         - name: description
           in: query
           description: The description
           type: string
           required: false
         - name: custom
           in: query
           description: The custom flag
           type: boolean
           required: false
         - name: pageNumber
           in: query
           description: The page number
           type: number
           format: int32
           required: false
         - name: pageSize
           in: query
           description: The page size
           type: number
           format: int32
           required: false
         - name: sortColumn
           in: query
           description: The sort column
           type: string
           required: false
         - name: sortOrder
           in: query
           description: The sort order
           type: string
           required: false
      responses:
        200:
          description: The response containing the InstitutionalPrograms
          schema:
            $ref: '#/definitions/TaskSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - Task
      summary: create Task
      description: This endpoint is responsible for creating Task
      consumes:
        - multipart/form-data
      security:
        - basicAuth: []
      parameters:
        - name: description
          in: formData
          description: The description
          type: string
        - name: number
          in: formData
          description: The number
          type: number
        - name: goalId
          in: formData
          description: The goal id
          type: number
        - name: mentorAssignment
          in: formData
          description: The mentor assignment
          type: boolean
        - name: menteeAssignment
          in: formData
          description: The mentee assignment
          type: boolean
        - name: durationInDays
          in: formData
          description: The duration in days
          type: number
        - name: custom
          in: formData
          description: The custom
          type: boolean
        - name: customData.mentor.id
          in: formData
          description: The custom mentor id
          type: number
        - name: customData.mentee.id
          in: formData
          description: The custom mentee id
          type: number
        - name: files
          in: formData
          description: The uploaded documents
          required: false
          type: file
      responses:
        200:
          description: The response containing the Task
          schema:
            $ref: '#/definitions/Task'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /activities/{id}:
    get:
      tags:
        - Activity
      summary: get activity
      description: This endpoint is responsible for getting activity
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Activity
          schema:
            $ref: '#/definitions/Activity'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Activity
      summary: update Activity
      description: This endpoint is responsible for updating Activity
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The Activity to update
          schema:
            $ref: '#/definitions/Activity'
      responses:
        200:
          description: The response containing the Activity
          schema:
            $ref: '#/definitions/Activity'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Activity
      summary: delete Activity
      description: This endpoint is responsible for deleting Activity
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /activities:
    get:
      tags:
        - Activity
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
         - name: institutionalProgramId
           in: query
           description: The institution program id
           type: number
           required: false
         - name: menteeId
           in: query
           description: The mentee id
           type: number
           required: false
         - name: description
           in: query
           description: The description
           type: string
           required: false
         - name: startDate
           in: query
           description: The start date
           type: string
           required: false
         - name: endDate
           in: query
           description: The end date
           type: string
           required: false
         - name: global
           in: query
           description: The global flag
           type: boolean
           required: false
         - name: activityTypes
           in: query
           description: The activity type
           type: string
           required: false
         - name: pageNumber
           in: query
           description: The page number
           type: number
           format: int32
           required: false
         - name: pageSize
           in: query
           description: The page size
           type: number
           format: int32
           required: false
         - name: sortColumn
           in: query
           description: The sort column
           type: string
           required: false
         - name: sortOrder
           in: query
           description: The sort order
           type: string
           required: false
      responses:
        200:
          description: The response containing the InstitutionalPrograms
          schema:
            $ref: '#/definitions/ActivitySearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - Activity
      summary: create Activity
      description: This endpoint is responsible for creating Activity
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The Activity to create
          schema:
            $ref: '#/definitions/Activity'
      responses:
        200:
          description: The response containing the Activity
          schema:
            $ref: '#/definitions/Activity'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - if token is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /mentees/{id}:
    get:
      tags:
        - Mentee
      summary: get Mentee
      description: This endpoint is responsible for getting Mentee
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the Mentee
          schema:
            $ref: '#/definitions/Mentee'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Mentee
      summary: update Mentee
      description: This endpoint is responsible for updating Mentee
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The Mentee to update
          schema:
            $ref: '#/definitions/Mentee'
      responses:
        200:
          description: The response containing the Mentee
          schema:
            $ref: '#/definitions/Mentee'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Mentee
      summary: delte Mentee
      description: This endpoint is responsible for deleting Mentee
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /mentees/{id}/averageScore:
    get:
      tags:
        - Mentee
      summary: get Mentee average score
      description: This endpoint is responsible for getting Mentee
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: number
          required: true
      responses:
        200:
          description: The response containing the score
          schema:
            type: number
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /mentees/{id}/matchingMentors:
      get:
        tags:
          - Mentee
        summary: get Mentee match mentors
        description: This endpoint is responsible for getting match mentors Mentee
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
          - name: maxCount
            in: query
            description: The max count
            type: number
            required: false
          - name: distance
            in: query
            description: The distance
            type: number
            required: false
          - name: personalInterests[].id
            in: query
            description: The personal interests
            type: number
            required: false
          - name: professionalInterests[].id
            in: query
            description: The personal interests
            type: string
            required: false
        responses:
          200:
            description: The response containing the match mentors
            schema:
              type: array
              items:
                 $ref: '#/definitions/Mentor'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentees/{id}/remoteMatchingMentors:
      get:
        tags:
          - Mentee
        summary: get Mentee match mentors
        description: This endpoint is responsible for getting match mentors Mentee using Haven OnDemand API
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
          - name: maxCount
            in: query
            description: The max count
            type: number
            required: false
          - name: distance
            in: query
            description: The distance
            type: number
            required: false
          - name: personalInterests[].value
            in: query
            description: The personal interests
            type: string
            required: false
          - name: professionalInterests[].value
            in: query
            description: The personal interests
            type: string
            required: false
        responses:
          200:
            description: The response containing the match mentors
            schema:
              type: array
              items:
                 $ref: '#/definitions/Mentor'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentees/{id}/confirmParentConsent:
      get:
        tags:
          - Mentee
        summary: confirm parent consent
        description: This endpoint is responsible for confirming parent consent
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
          - name: token
            in: query
            description: The token
            type: string
            required: true
        responses:
          200:
            description: The response containing the result
            schema:
              type: boolean
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentees:
    get:
      tags:
        - Mentee
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: institutionId
          in: query
          description: The  institution id
          type: number
          required: false
        - name: status
          in: query
          description: The  status
          type: string
          required: false
        - name: minAveragePerformanceScore
          in: query
          description: The  min average performance scores
          type: string
          required: false
        - name: maxAveragePerformanceScore
          in: query
          description: The  max average performance scores
          type: string
          required: false
        - name: name
          in: query
          description: The name
          type: string
          required: false
        - name: personalInterests
          in: query
          type: number
          required: false
          description: should use personalInterests[0]=id
        - name: professionalInterests
          in: query
          type: number
          required: false
          description: should use professional[0]=id
        - name: assignedToInstitution
          in: query
          description: The assigned to institution flag
          type: boolean
          required: false
        - name: schoolName
          in: query
          description: The school name
          type: string
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the InstitutionalPrograms
          schema:
            $ref: '#/definitions/MenteeSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Mentee
      summary: create Mentee
      description: This endpoint is responsible for creating Mentee
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The Mentee to create
          schema:
            $ref: '#/definitions/MenteeCreateBody'
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/Mentee'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /mentors/{id}:
    get:
      tags:
        - Mentor
      summary: get Mentor
      description: This endpoint is responsible for getting Mentor
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: number
          required: true
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/Mentor'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - Mentor
      summary: update Mentor
      description: This endpoint is responsible for updating Mentor
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The Mentor to update
          schema:
            $ref: '#/definitions/Mentor'
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/Mentor'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - Mentor
      summary: delte Mentor
      description: This endpoint is responsible for deleting Mentor
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /mentors/{id}/averageScore:
      get:
        tags:
          - Mentor
        summary: get Mentor average score
        description: This endpoint is responsible for getting Mentor
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
        responses:
          200:
            description: The response containing the score
            schema:
              type: number
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentors/{id}/matchingMentees:
      get:
        tags:
          - Mentor
        summary: get Mentor match mentees
        description: This endpoint is responsible for getting match mentees Mentees
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
          - name: maxCount
            in: query
            description: The max count
            type: number
            required: false
          - name: distance
            in: query
            description: The distance
            type: number
            required: false
          - name: personalInterests[].id
            in: query
            description: The personal interests
            type: number
            required: false
          - name: professionalInterests[].id
            in: query
            description: The personal interests
            type: number
            required: false
        responses:
          200:
            description: The response containing the  match mentees
            schema:
              type: array
              items:
                 $ref: '#/definitions/Mentee'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentors/{id}/remoteMatchingMentees:
      get:
        tags:
          - Mentor
        summary: get Mentor match mentees
        description: This endpoint is responsible for getting match mentees Mentees using Haven OnDemand API
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: number
            required: true
          - name: maxCount
            in: query
            description: The max count
            type: number
            required: false
          - name: distance
            in: query
            description: The distance
            type: number
            required: false
          - name: personalInterests[].value
            in: query
            description: The personal interests
            type: string
            required: false
          - name: professionalInterests[].value
            in: query
            description: The personal interests
            type: string
            required: false
        responses:
          200:
            description: The response containing the  match mentees
            schema:
              type: array
              items:
                 $ref: '#/definitions/Mentee'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /mentors/linkedInExperience:
    get:
      tags:
        - Mentor
      summary: get Mentor linkedInExperience
      description: This endpoint is responsible for getting linkedInExperience for Mentor
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the experience data
          schema:
            type: array
            items:
              $ref: '#/definitions/ProfessionalExperienceData'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /mentors:
    get:
      tags:
        - Mentor
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: institutionId
          in: query
          description: The  institution id
          type: number
          required: false
        - name: status
          in: query
          description: The  status
          type: string
          required: false
        - name: minAveragePerformanceScore
          in: query
          description: The  min average performance scores
          type: string
          required: false
        - name: maxAveragePerformanceScore
          in: query
          description: The  max average performance scores
          type: string
          required: false
        - name: name
          in: query
          description: The name
          type: string
          required: false
        - name: personalInterests
          in: query
          type: number
          required: false
          description: should use personalInterests[0]=id
        - name: professionalInterests
          in: query
          type: number
          required: false
          description: should use professional[0]=id
        - name: assignedToInstitution
          in: query
          description: The assigned to institution flag
          type: boolean
          required: false
        - name: mentorType
          in: query
          description: The  mentor type
          type: string
          required: false
        - name: professionalAreas
          in: query
          description: use format professionalAreas[0].id=id
          type: number
          required: false
        - name: companyName
          in: query
          description: The company name
          type: number
          required: false
        - name: mentorRequestStatus
          in: query
          description: The mentor request status
          type: number
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/MentorSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - Mentor
      summary: create Mentor
      description: This endpoint is responsible for creating Mentor
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The Mentor to create
          schema:
            $ref: '#/definitions/MentorCreateBody'
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/Mentor'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'



  /menteeMentorPrograms/{id}:
    get:
      tags:
        - MenteeMentorProgram
      summary: get MenteeMentorProgram
      description: This endpoint is responsible for getting MenteeMentorProgram
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the MenteeMentorProgram
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - MenteeMentorProgram
      summary: update MenteeMentorProgram
      description: This endpoint is responsible for updating MenteeMentorProgram
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The MenteeMentorProgram to update
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
      responses:
        200:
          description: The response containing the MenteeMentorProgram
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - MenteeMentorProgram
      summary: delte MenteeMentorProgram
      description: This endpoint is responsible for deleting MenteeMentorProgram
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorPrograms:
    get:
      tags:
        - MenteeMentorProgram
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: institutionalProgramId
          in: query
          description: The institutional program id
          type: number
          format: int32
          required: false
        - name: mentorId
          in: query
          description: The mentor id
          type: number
          format: int32
          required: true
        - name: menteeId
          in: query
          description: The mentee id
          type: number
          format: int32
          required: true
        - name: startDate
          in: query
          description: The start date
          type: string
          required: false
        - name: endDate
          in: query
          description: The end date
          type: string
          required: false
        - name: completed
          in: query
          description: The completed flag
          type: boolean
          required: false
        - name: requestStatus
          in: query
          description: The request status
          type: boolean
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/MenteeMentorProgramSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - MenteeMentorProgram
      summary: create MenteeMentorProgram
      description: This endpoint is responsible for creating MenteeMentorProgram
      security:
        - basicAuth: []
      parameters:
        - name: body
          in: body
          description: The MenteeMentorProgram to
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
      responses:
        200:
          description: The response containing the MenteeMentorProgram
          schema:
            $ref: '#/definitions/MenteeMentorProgram'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorPrograms/{id}/menteeFeedback:
    put:
      tags:
        - MenteeMentorProgram
      summary: update MenteeMentorProgram feedback
      description: This endpoint is responsible for updating MenteeMentorProgram feedback
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: menteeFeedback
          in: body
          description: The MenteeFeedback
          schema:
            $ref: '#/definitions/MenteeFeedback'
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorPrograms/{id}/mentorFeedback:
    put:
      tags:
        - MenteeMentorProgram
      summary: update MenteeMentorProgram feedback
      description: This endpoint is responsible for updating MenteeMentorProgram feedback
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: menteeFeedback
          in: body
          description: The MentorFeedback
          schema:
            $ref: '#/definitions/MentorFeedback'
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /menteeMentorGoals/{id}:
    get:
      tags:
        - MenteeMentorGoal
      summary: get MenteeMentorGoal
      description: This endpoint is responsible for getting MenteeMentorGoal
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the MenteeMentorGoal
          schema:
            $ref: '#/definitions/MenteeMentorGoal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - MenteeMentorGoal
      summary: update MenteeMentorGoal
      description: This endpoint is responsible for updating MenteeMentorGoal
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The MenteeMentorGoal to update
          schema:
            $ref: '#/definitions/MenteeMentorGoal'
      responses:
        200:
          description: The response containing the MenteeMentorGoal
          schema:
            $ref: '#/definitions/MenteeMentorGoal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - MenteeMentorGoal
      summary: delte MenteeMentorGoal
      description: This endpoint is responsible for deleting MenteeMentorGoal
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorGoals:
    get:
      tags:
        - MenteeMentorGoal
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: menteeMentorProgramId
          in: query
          description: The mentee mentor program id
          type: number
          format: int32
          required: false
        - name: completed
          in: query
          description: The completed flag
          type: boolean
          required: false
        - name: menteeId
          in: query
          description: The mentee id
          type: number
          format: int32
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/MenteeMentorGoalSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - MenteeMentorGoal
      summary: create MenteeMentorGoal
      description: This endpoint is responsible for creating MenteeMentorGoal
      security:
        - basicAuth: []
      parameters:
        - name: menteeMentorGoal
          in: body
          description: The MenteeMentorGoal to create
          schema:
            $ref: '#/definitions/MenteeMentorGoal'
      responses:
        200:
          description: The response containing the MenteeMentorGoal
          schema:
            $ref: '#/definitions/MenteeMentorGoal'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /menteeMentorTasks/{id}:
    get:
      tags:
        - MenteeMentorTask
      summary: get MenteeMentorTask
      description: This endpoint is responsible for getting MenteeMentorTask
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the MenteeMentorTask
          schema:
            $ref: '#/definitions/MenteeMentorTask'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - MenteeMentorTask
      summary: update MenteeMentorTask
      description: This endpoint is responsible for updating MenteeMentorTask
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The MenteeMentorTask to update
          schema:
            $ref: '#/definitions/MenteeMentorTask'
      responses:
        200:
          description: The response containing the MenteeMentorTask
          schema:
            $ref: '#/definitions/MenteeMentorTask'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - MenteeMentorTask
      summary: delte MenteeMentorTask
      description: This endpoint is responsible for deleting MenteeMentorTask
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorTasks:
    get:
      tags:
        - MenteeMentorTask
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: menteeMentorProgramId
          in: query
          description: The mentee mentor program id
          type: number
          format: int32
          required: false
        - name: completed
          in: query
          description: The completed flag
          type: boolean
          required: false
        - name: menteeId
          in: query
          description: The mentee id
          type: number
          format: int32
          required: false
        - name: mentorAssignment
          in: query
          description: The mentor assignment
          type: boolean
          required: false
        - name: menteeAssignment
          in: query
          description: The mentor assignment
          type: boolean
          required: false
        - name: completedOn
          in: query
          description: The completed on date
          type: string
          required: false
        - name: menteeMentorGoalId
          in: query
          description: The mentee mentor goal id
          type: number
          required: false
        - name: startDate
          in: query
          description: The start date
          type: string
          required: false
        - name: endDate
          in: query
          description: The end date
          type: string
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the MenteeMentorTasks
          schema:
            $ref: '#/definitions/MenteeMentorTaskSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - MenteeMentorTask
      summary: create MenteeMentorTask
      description: This endpoint is responsible for creating MenteeMentorTask
      security:
        - basicAuth: []
      parameters:
        - name: menteeMentorGoal
          in: body
          description: The MenteeMentorGoal to create
          schema:
            $ref: '#/definitions/MenteeMentorTask'
      responses:
        200:
          description: The response containing the MenteeMentorTask
          schema:
            $ref: '#/definitions/MenteeMentorTask'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorResponsibilities/{id}:
    get:
      tags:
        - MenteeMentorResponsibility
      summary: get MenteeMentorResponsibility
      description: This endpoint is responsible for getting MenteeMentorResponsibility
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the MenteeMentorResponsibility
          schema:
            $ref: '#/definitions/MenteeMentorResponsibility'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - MenteeMentorResponsibility
      summary: update MenteeMentorResponsibility
      description: This endpoint is responsible for updating MenteeMentorResponsibility
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The MenteeMentorResponsibility to update
          schema:
            $ref: '#/definitions/MenteeMentorResponsibility'
      responses:
        200:
          description: The response containing the MenteeMentorResponsibility
          schema:
            $ref: '#/definitions/MenteeMentorResponsibility'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - MenteeMentorResponsibility
      summary: delte MenteeMentorResponsibility
      description: This endpoint is responsible for deleting MenteeMentorResponsibility
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /menteeMentorResponsibilities:
    get:
      tags:
        - MenteeMentorResponsibility
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: institutionalProgramId
          in: query
          description: The institutional program id
          type: number
          format: int32
          required: false
        - name: responsibilityId
          in: query
          description: The responsibility id
          type: number
          format: int32
          required: true
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/MenteeMentorResponsibilitySearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - MenteeMentorResponsibility
      summary: create MenteeMentorResponsibility
      description: This endpoint is responsible for creating MenteeMentorResponsibility
      security:
        - basicAuth: []
      parameters:
        - name: body
          in: body
          description: The MenteeMentorResponsibility to
          schema:
            $ref: '#/definitions/MenteeMentorResponsibility'
      responses:
        200:
          description: The response containing the MenteeMentorResponsibility
          schema:
            $ref: '#/definitions/MenteeMentorResponsibility'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /responsibilities/{id}:
      get:
        tags:
          - Responsibility
        summary: get Responsibility
        description: This endpoint is responsible for getting Responsibility
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: string
            required: true
        responses:
          200:
            description: The response containing the Responsibility
            schema:
              $ref: '#/definitions/Responsibility'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

      put:
        tags:
          - Responsibility
        summary: update Responsibility
        description: This endpoint is responsible for updating Responsibility
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: string
            required: true
          - name: asset
            in: body
            description: The Responsibility to update
            schema:
              $ref: '#/definitions/Responsibility'
        responses:
          200:
            description: The response containing the Responsibility
            schema:
              $ref: '#/definitions/Responsibility'
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

      delete:
        tags:
          - Responsibility
        summary: delte Responsibility
        description: This endpoint is responsible for deleting Responsibility
        security:
          - basicAuth: []
        parameters:
          - name: id
            in: path
            description: The id
            type: string
            required: true
        responses:
          400:
            description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
            schema:
              $ref: '#/definitions/Error'
          401:
            description: Authentication Error - ien is missing or invalid
            schema:
              $ref: '#/definitions/Error'
          403:
            description: Access Denied Error - if forbidden to access
            schema:
              $ref: '#/definitions/Error'
          404:
            description: Not Found - if match entity not found
            schema:
              $ref: '#/definitions/Error'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /responsibilities:
    get:
      tags:
        - Responsibility
      summary: search for entities
      description: This endpoint is responsible for searching by criteria
      security:
      - basicAuth: []
      parameters:
        - name: institutionalProgramId
          in: query
          description: The institutional program id
          type: number
          format: int32
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Mentor
          schema:
            $ref: '#/definitions/ResponsibilitySearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - Responsibility
      summary: create Responsibility
      description: This endpoint is responsible for creating Responsibility
      security:
        - basicAuth: []
      parameters:
        - name: body
          in: body
          description: The Responsibility to
          schema:
            $ref: '#/definitions/Responsibility'
      responses:
        200:
          description: The response containing the Responsibility
          schema:
            $ref: '#/definitions/Responsibility'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionAdmins?{institution_id}&{pageNumber}&{pageSize}&{sortColumn}&{sortOrder}:
    get:
      tags:
        - InstitutionAdmin
      summary: search for entities
      description: This endpoint is responsible for searching by criteria. See the rest of available params in TCUML.
      security:
      - basicAuth: []
      parameters:
        - name: institution_id
          in: path
          description: The attribute Name
          type: string
          required: true
        - name: pageNumber
          in: path
          description: The page number
          type: number
          format: int32
          required: true
        - name: pageSize
          in: path
          description: The page size
          type: number
          format: int32
          required: true
        - name: sortColumn
          in: path
          description: The sort column
          type: string
          required: true
        - name: sortOrder
          in: path
          description: The sort order
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionAdmins
          schema:
            $ref: '#/definitions/InstitutionAdminSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /institutionAdmins/{id}:
    get:
      tags:
        - InstitutionAdmin
      summary: get institutionAdmin
      description: This endpoint is responsible for getting institutionAdmin
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionAdmin
          schema:
            $ref: '#/definitions/InstitutionAdmin'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - InstitutionAdmin
      summary: update institutionAdmin
      description: This endpoint is responsible for updating institutionAdmin
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The institutionAdmin to update
          schema:
            $ref: '#/definitions/InstitutionAdmin'
      responses:
        200:
          description: The response containing the Institution
          schema:
            $ref: '#/definitions/InstitutionAdmin'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - InstitutionAdmin
      summary: delete institutionAdmin
      description: This endpoint is responsible for deleting institutionAdmin
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionAdmins:
    post:
      tags:
        - InstitutionAdmin
      summary: create institutionAdmin
      description: This endpoint is responsible for creating institutionAdmin
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The institutionAdmin to update
          schema:
            $ref: '#/definitions/InstitutionAdmin'
      responses:
        200:
          description: The response containing the InstitutionAdmin
          schema:
            $ref: '#/definitions/InstitutionAdmin'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /institutionAgreements/{id}:
    get:
      tags:
        - InstitutionAgreement
      summary: get institutionAgreement
      description: This endpoint is responsible for getting institutionAgreement
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionAgreement
          schema:
            $ref: '#/definitions/InstitutionAgreement'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - InstitutionAgreement
      summary: update institutionAgreement
      description: This endpoint is responsible for updating institutionAgreement
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The institutionAgreement to update
          schema:
            $ref: '#/definitions/InstitutionAgreement'
      responses:
        200:
          description: The response containing the InstitutionAgreement
          schema:
            $ref: '#/definitions/InstitutionAgreement'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - InstitutionAgreement
      summary: delete institutionAgreement
      description: This endpoint is responsible for deleting institutionAgreement
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionAgreements:
    get:
      tags:
        - InstitutionAgreement
      summary: search for entities
      description: This endpoint is responsible for searching by criteria. See the rest of available params in TCUML.
      security:
      - basicAuth: []
      parameters:
        - name: institutionId
          in: query
          description: The institution id
          type: number
          format: int32
          required: false
        - name: agreementName
          in: query
          description: The agreement name
          type: string
          required: false
        - name: userRole.id
          in: query
          description: The user role id
          type: number
          format: int32
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: false
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the InstitutionAdmins
          schema:
            $ref: '#/definitions/InstitutionAgreementSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    post:
      tags:
        - InstitutionAgreement
      summary: create institutionAgreement
      description: This endpoint is responsible for creating institutionAgreement
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The institutionAgreement to create
          schema:
            $ref: '#/definitions/InstitutionAgreement'
      responses:
        200:
          description: The response containing the InstitutionAdmin
          schema:
            $ref: '#/definitions/InstitutionAgreement'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
          description: Authentication Error - ien is missing or invalid
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /institutionAdminAccessRequests?{institution_id}&{pageNumber}&{pageSize}&{sortColumn}&{sortOrder}:
    get:
      tags:
        - InstitutionAdminAccessRequest
      summary: search for entities
      description: This endpoint is responsible for searching by criteria. See the rest of available params in TCUML.
      security:
      - basicAuth: []
      parameters:
        - name: institution_id
          in: path
          description: The attribute Name
          type: string
          required: true
        - name: pageNumber
          in: path
          description: The page number
          type: number
          format: int32
          required: true
        - name: pageSize
          in: path
          description: The page size
          type: number
          format: int32
          required: true
        - name: sortColumn
          in: path
          description: The sort column
          type: string
          required: true
        - name: sortOrder
          in: path
          description: The sort order
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionAdminAccessRequests
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequestSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /institutionAdminAccessRequests/{id}:
    get:
      tags:
        - InstitutionAdminAccessRequest
      summary: get institutionAdminAccessRequest
      description: This endpoint is responsible for getting institutionAdminAccessRequest
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the InstitutionAdminAccessRequest
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequest'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    put:
      tags:
        - InstitutionAdminAccessRequest
      summary: update institutionAdminAccessRequest
      description: This endpoint is responsible for updating institutionAdminAccessRequest
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: asset
          in: body
          description: The institutionAgreement to update
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequest'
      responses:
        200:
          description: The response containing the InstitutionAdminAccessRequest
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequest'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - InstitutionAdminAccessRequest
      summary: delete institutionAdminAccessRequest
      description: This endpoint is responsible for deleting institutionAdminAccessRequest
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /institutionAdminAccessRequests:
    post:
      tags:
        - InstitutionAdminAccessRequest
      summary: create institutionAdminAccessRequest
      description: This endpoint is responsible for creating institutionAdminAccessRequest
      security:
        - basicAuth: []
      parameters:
        - name: institution
          in: body
          description: The institutionAdmin to update
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequest'
      responses:
        200:
          description: The response containing the InstitutionAdminAccessRequest
          schema:
            $ref: '#/definitions/InstitutionAdminAccessRequest'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /users/{id}:
    get:
      tags:
        - User
      summary: get User
      description: This endpoint is responsible for getting User
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        200:
          description: The response containing the User
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    put:
      tags:
        - User
      summary: update User
      description: This endpoint is responsible for updating User
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
        - name: user
          in: body
          description: The User to update
          schema:
            $ref: '#/definitions/User'
      responses:
        200:
          description: The response containing the User
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

    delete:
      tags:
        - User
      summary: delete User
      description: This endpoint is responsible for deleting User
      security:
        - basicAuth: []
      parameters:
        - name: id
          in: path
          description: The id
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /users:
    get:
      tags:
        - User
      summary: search for entities
      description: This endpoint is responsible for searching by attribute
      security:
        - basicAuth: []
      parameters:
        - name: name
          in: query
          description: The attribute Name
          type: string
          required: false
        - name: pageNumber
          in: query
          description: The page number
          type: number
          format: int32
          required: false
        - name: pageSize
          in: query
          description: The page size
          type: number
          format: int32
          required: false
        - name: sortColumn
          in: query
          description: The sort column
          type: string
          required: true
        - name: sortOrder
          in: query
          description: The sort order
          type: string
          required: false
      responses:
        200:
          description: The response containing the Users
          schema:
            $ref: '#/definitions/UserSearchResult'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'
    post:
      tags:
        - User
      summary: create User
      description: This endpoint is responsible for creating User
      security:
        - basicAuth: []
      parameters:
        - name: user
          in: body
          description: The User to create
          schema:
            $ref: '#/definitions/UserCreateBody'
      responses:
        200:
          description: The response containing the User
          schema:
            $ref: '#/definitions/User'
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        401:
            description: Authentication Error - if token is missing or invalid
            schema:
              $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /users/forgotPassword:
    put:
      tags:
        - User
      summary: initiate forgot password
      description: This endpoint is responsible for forgot password functionality
      security:
        - basicAuth: []
      parameters:
        - name: email
          in: query
          description: The email
          type: string
          required: true
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        403:
          description: Access Denied Error - if forbidden to access
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Not Found - if match entity not found
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /users/updatePassword:
    put:
      tags:
        - User
      summary: initiate forgot password
      description: This endpoint is responsible for forgot password functionality
      security:
        - basicAuth: []
      parameters:
        - name: newPassword
          in: body
          description: The new password.
          schema:
             $ref: '#/definitions/NewPassword'
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /login:
    post:
      tags:
        - Security
      summary: Sends login and password in header
      description: This endpoint is responsible for login
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the security token
          schema:
            type: string
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /logout:
    post:
      tags:
        - Security
      summary: Logs out
      description: This endpoint is responsible for log out.
      security:
        - basicAuth: []
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /auth:
    post:
      tags:
        - Security
      summary: The social login endpoint
      description: This endpoint is responsible for social login.
      security:
        - basicAuth: []
      responses:
        400:
          description: Bad Request - if there was problem with the request (e.g. malformed or some parameters are missing)
          schema:
            $ref: '#/definitions/Error'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


  /lookups/coutries:
    get:
      tags:
        - Lookups
      summary: get Countriess
      description: This endpoint is responsible for getting lookups
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the lookups
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'




  /lookups/userRoles:
    get:
      tags:
        - Lookups
      summary: get UserRoles
      description: This endpoint is responsible for getting lookups
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the lookups
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /lookups/states:
    get:
      tags:
        - Lookups
      summary: get states
      description: This endpoint is responsible for getting lookups
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the lookups
          schema:
            type: array
            items:
              $ref: '#/definitions/State'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /lookups/professionalConsultantAreas:
      get:
        tags:
          - Lookups
        summary: get professionalConsultantAreas
        description: This endpoint is responsible for getting lookups
        security:
          - basicAuth: []
        responses:
          200:
            description: The response containing the lookups
            schema:
              type: array
              items:
                $ref: '#/definitions/ProfessionalConsultantArea'
          500:
            description: Internal server error - if the request was properly formatted, but the operation failed on the server side
            schema:
              $ref: '#/definitions/Error'
          default:
            description: Unexpected error.
            schema:
              $ref: '#/definitions/Error'

  /lookups/personalInterests:
    get:
      tags:
        - Lookups
      summary: get personalInterests
      description: This endpoint is responsible for getting lookups
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the lookups
          schema:
            type: array
            items:
              $ref: '#/definitions/PersonalInterest'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'

  /lookups/professionalInterests:
    get:
      tags:
        - Lookups
      summary: get professionalInterests
      description: This endpoint is responsible for getting lookups
      security:
        - basicAuth: []
      responses:
        200:
          description: The response containing the lookups
          schema:
            type: array
            items:
              $ref: '#/definitions/ProfessionalInterest'
        500:
          description: Internal server error - if the request was properly formatted, but the operation failed on the server side
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/Error'


definitions:
  MenteeMentorIds:
    type: object
    properties:
      menteeId:
        type: number
        description: the mentee user id
      mentorId:
        type: number
        description: the mentor user id

  UserCreateBody:
    type: object
    properties:
      username:
        type: string
        description: The username.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      password:
        type: string
        description: The password.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'

  User:
    type: object
    properties:
      id:
        type: number
        format: integer
        description: The id.
      username:
        type: string
        description: The username.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      password:
        type: string
        description: The password (present only in PUT and POST requests, not in GET).
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      isVirtualUser:
        type: boolean
        description: The is virtual user flag.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      postalCode:
        type: string
        description: The postal code.
      longitude:
        type: string
        description: The longitude.
      latitude:
        type: string
        description: The latitude.
      country:
         $ref: '#/definitions/Country'
      state:
        $ref: '#/definitions/State'
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'

  UserSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/User'


  UserRole:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      value:
        type: string
        description: The value.

  NewPassword:
      type: object
      properties:
        token:
          type: string
          format: int32
          description: The token.
        newPassword:
          type: string
          description: The new password.

  Country:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      value:
        type: string
        description: The value.

  State:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      value:
        type: string
        description: The value.

  ProfessionalConsultantArea:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        value:
          type: string
          description: The value.

  InstitutionContact:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        title:
          type: string
          description: The title.
        firstName:
          type: string
          description: The first name.
        lastName:
          type: string
          description: The last name.
        email:
          type: string
          description: The email.
        phoneNumber:
          type: string
          description: The phone number.
        primaryContact:
          type: boolean
          description: The primary contact flag.

  ParentConsent:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        parentName:
          type: integer
          format: int32
          description: The parent name.
        signatureFilePath:
          type: string
          description: The signature file path.
        parentEmail:
          type: string
          description: The parent email.
        token:
          type: string
          description: The token.

  InstitutionAffiliationCode:
        type: object
        properties:
          id:
            type: integer
            format: int32
            description: The id.
          code:
            type: string
            description: The code.
          institutionId:
            type: number
            description: The institution id.
          used:
            type: boolean
            description: The used flag.

  PersonalInterest:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        value:
          type: string
          description: The value.
        picturePath:
          type: string
          description: The picture path.
        parentCategory:
          $ref: '#/definitions/PersonalInterest'

  WeightedPersonalInterest:
        type: object
        properties:
          id:
            type: integer
            format: int32
            description: The id.
          weight:
            type: number
            description: The weight.
          userId:
            type: number
            description: The user id.
          personalInterest:
            $ref: '#/definitions/PersonalInterest'

  ProfessionalInterest:
        type: object
        properties:
          id:
            type: integer
            format: int32
            description: The id.
          value:
            type: string
            description: The value.
          picturePath:
            type: string
            description: The picture path.
          parentCategory:
            $ref: '#/definitions/ProfessionalInterest'

  WeightedProfessionalInterest:
        type: object
        properties:
          id:
            type: integer
            format: int32
            description: The id.
          weight:
            type: number
            description: The weight.
          userId:
            type: number
            description: The user id.
          professionalInterest:
            $ref: '#/definitions/ProfessionalInterest'

  InstitutionCreateBody:
    type: object
    properties:
      institutionName:
        type: string
        description: The name.
      parentOrganization:
        type: string
        description: The parent organization.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      zip:
        type: string
        description: The zip.
      phone:
         type: string
         description: The phone.
      email:
        type: string
        description: The email.
      description:
        type: string
        description: The description.
      status:
        type: string
        description: The status.
      logoPath:
        type: string
        description: The logo path.
      contacts:
        type: array
        items:
          $ref: '#/definitions/InstitutionContact'
      state:
        $ref: '#/definitions/State'
      country:
        $ref: '#/definitions/Country'

  Institution:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      createdOn:
        type: integer
        format: int32
        description: The created on datetime with unix epoch format.
      lastModifiedOn:
        type: integer
        format: int32
        description: The last modified on time
      institutionName:
        type: string
        description: The name.
      parentOrganization:
        type: string
        description: The parent organization.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      zip:
        type: string
        description: The zip.
      phone:
         type: string
         description: The phone.
      email:
        type: string
        description: The email.
      description:
        type: string
        description: The description.
      status:
        type: string
        description: The status.
      logoPath:
        type: string
        description: The logo path.
      contacts:
        type: array
        items:
          $ref: '#/definitions/InstitutionContact'
      state:
        $ref: '#/definitions/State'
      country:
        $ref: '#/definitions/Country'


  InstitutionSummary:
    type: object
    properties:
      institutionalProgramsCount:
        type: number
        format: integer
        description: The institutional programs count.
      upcomingEventsCount:
        type: number
        format: integer
        description: The events count.
      associatedMenteesCount:
        type: number
        format: integer
        description: The mentees count.
      associatedMentorsCount:
        type: number
        format: integer
        description: The mentors count.

  Responsibility:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      number:
        type: number
        format: integer
        description: The number.
      title:
        type: string
        description: The title.
      date:
        type: string
        description: The date.
      menteeResponsibility:
        type: boolean
        description: The mentee responsibility.
      mentorResponsibility:
        type: boolean
        description: The mentor responsibility.
      institutionalProgramId:
        type: number
        format: int32
        description: The institutional program id.

  ResponsibilitySearchResult:
      type: object
      properties:
        total:
          type: number
          format: integer
          description: The total.
        totalPages:
          type: number
          format: integer
          description: The total pages.
        entities:
          type: array
          items:
            $ref: '#/definitions/Responsibility'

  InstitutionalProgram:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      programName:
        type: string
        description: The program name.
      startDate:
        type: string
        description: The start date.
      endDate:
        type: string
        description: The end date.
      durationInDays:
        type: number
        description: The duration in days.
      programImageUrl:
        type: string
        description: The program image url.
      institution:
        $ref: '#/definitions/Institution'
      goals:
         type: array
         items:
           $ref: '#/definitions/Goal'
      responsibilities:
         type: array
         items:
           $ref: '#/definitions/Responsibility'
      documents:
          type: array
          items:
            $ref: '#/definitions/Document'
      usefulLinks:
          type: array
          items:
            $ref: '#/definitions/UsefulLink'

  InstitutionSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/Institution'

  InstitutionalProgramSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/InstitutionalProgram'

  InstitutionAdmin:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      username:
        type: string
        description: The username.
      institution_id:
        type: integer
        format: int32
        description: The institution id.

  InstitutionAdminSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/InstitutionAdmin'

  InstitutionAgreement:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      agreementName:
        type: string
        description: The name.
      agreementFilePath:
        type: string
        description: The file path.
      institutionId:
        type: integer
        format: int32
        description: The institution id.
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'

  InstitutionAgreementSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/InstitutionAgreement'


  InstitutionAdminAccessRequest:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      status:
        type: string
        description: The status.
      institution:
        $ref: '#/definitions/Institution'
      institution_admin:
        $ref: '#/definitions/InstitutionAdmin'

  InstitutionAdminAccessRequestSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/InstitutionAdminAccessRequest'

  MentorCreateBody:
    type: object
    properties:
      username:
        type: string
        description: The username.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      assignedToInstitution:
        type: boolean
        description: The assigned to institution flag.
      birthDate:
        type: string
        description: The birth date.
      phone:
         type: string
         description: The phone.
      skypeUsername:
        type: string
        description: The skype username.
      introVideoLink:
        type: string
        description: The intro video link.
      description:
        type: string
        description: The description.
      averagePerformanceScore:
        type: number
        description: The average performance score.
      mentorType:
        type: string
        description: The mentor type.
      companyName:
        type: string
        description: The company name.
      linkedInUrl:
        type: string
        description: The linkedIn url.
      isVirtualUser:
        type: boolean
        description: The is virtual user flag.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      postalCode:
        type: string
        description: The postal code.
      longitude:
        type: string
        description: The longitude.
      latitude:
        type: string
        description: The latitude.
      country:
         $ref: '#/definitions/Country'
      state:
        $ref: '#/definitions/State'
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      personalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedPersonalInterest'
      professionalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedProfessionalInterest'
      institution:
        $ref: '#/definitions/Institution'
      institutionAffiliationCode:
        $ref: '#/definitions/InstitutionAffiliationCode'
      parentConsent:
        $ref: '#/definitions/ParentConsent'

  Mentor:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      createdOn:
        type: integer
        format: int32
        description: The created on datetime with unix epoch format.
      lastModifiedOn:
        type: integer
        format: int32
        description: The last modified on time
      username:
        type: string
        description: The username.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      assignedToInstitution:
        type: boolean
        description: The assigned to institution flag.
      birthDate:
        type: string
        description: The birth date.
      phone:
         type: string
         description: The phone.
      skypeUsername:
        type: string
        description: The skype username.
      introVideoLink:
        type: string
        description: The intro video link.
      description:
        type: string
        description: The description.
      averagePerformanceScore:
        type: number
        description: The average performance score.
      mentorType:
        type: string
        description: The mentor type.
      companyName:
        type: string
        description: The company name.
      linkedInUrl:
        type: string
        description: The linkedIn url.
      isVirtualUser:
        type: boolean
        description: The is virtual user flag.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      postalCode:
        type: string
        description: The postal code.
      longitude:
        type: string
        description: The longitude.
      latitude:
        type: string
        description: The latitude.
      country:
         $ref: '#/definitions/Country'
      state:
        $ref: '#/definitions/State'
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      personalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedPersonalInterest'
      professionalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedProfessionalInterest'
      institution:
        $ref: '#/definitions/Institution'
      institutionAffiliationCode:
        $ref: '#/definitions/InstitutionAffiliationCode'
      parentConsent:
        $ref: '#/definitions/ParentConsent'

  MentorSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/Mentor'

  MenteeCreateBody:
    type: object
    properties:
      username:
        type: string
        description: The username.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      assignedToInstitution:
        type: boolean
        description: The assigned to institution flag.
      birthDate:
        type: string
        description: The birth date.
      phone:
         type: string
         description: The phone.
      skypeUsername:
        type: string
        description: The skype username.
      introVideoLink:
        type: string
        description: The intro video link.
      description:
        type: string
        description: The description.
      averagePerformanceScore:
        type: number
        description: The average performance score.
      familyIncome:
        type: number
        description: The family income.
      school:
        type: string
        description: The school.
      facebookUrl:
        type: string
        description: The facebook url.
      isVirtualUser:
        type: boolean
        description: The is virtual user flag.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      postalCode:
        type: string
        description: The postal code.
      longitude:
        type: string
        description: The longitude.
      latitude:
        type: string
        description: The latitude.
      country:
         $ref: '#/definitions/Country'
      state:
        $ref: '#/definitions/State'
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      personalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedPersonalInterest'
      professionalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedProfessionalInterest'
      institution:
        $ref: '#/definitions/Institution'
      institutionAffiliationCode:
        $ref: '#/definitions/InstitutionAffiliationCode'
      parentConsent:
        $ref: '#/definitions/ParentConsent'

  Mentee:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      createdOn:
        type: integer
        format: int32
        description: The created on datetime with unix epoch format.
      lastModifiedOn:
        type: integer
        format: int32
        description: The last modified on time
      username:
        type: string
        description: The username.
      firstName:
        type: string
        description: The first name.
      lastName:
        type: string
        description: The last name.
      email:
        type: string
        description: The email.
      profilePicturePath:
        type: string
        description: The profile picture path.
      status:
        type: string
        description: The status.
      assignedToInstitution:
        type: boolean
        description: The assigned to institution flag.
      birthDate:
        type: string
        description: The birth date.
      phone:
         type: string
         description: The phone.
      skypeUsername:
        type: string
        description: The skype username.
      introVideoLink:
        type: string
        description: The intro video link.
      description:
        type: string
        description: The description.
      averagePerformanceScore:
        type: number
        description: The average performance score.
      familyIncome:
        type: number
        description: The family income.
      school:
        type: string
        description: The school.
      facebookUrl:
        type: string
        description: The facebook url.
      isVirtualUser:
        type: boolean
        description: The is virtual user flag.
      streetAddress:
        type: string
        description: The street address.
      city:
        type: string
        description: The city.
      postalCode:
        type: string
        description: The postal code.
      longitude:
        type: string
        description: The longitude.
      latitude:
        type: string
        description: The latitude.
      country:
         $ref: '#/definitions/Country'
      state:
        $ref: '#/definitions/State'
      roles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      personalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedPersonalInterest'
      professionalInterests:
        type: array
        items:
          $ref: '#/definitions/WeightedProfessionalInterest'
      institution:
        $ref: '#/definitions/Institution'
      institutionAffiliationCode:
        $ref: '#/definitions/InstitutionAffiliationCode'
      parentConsent:
        $ref: '#/definitions/ParentConsent'


  MenteeSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/Mentee'

  MenteeMentorResponsibility:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        number:
          type: number
          format: integer
          description: The number.
        title:
          type: string
          description: The title.
        date:
          type: string
          description: The date.
        menteeResponsibility:
          type: boolean
          description: The mentee responsibility.
        mentorResponsibility:
          type: boolean
          description: The mentor responsibility.
        menteeMentorProgramId:
          type: number
          format: int32
          description: The mentee mentor program id.
        responsibilityId:
            type: number
            format: int32
            description: The responsibility id.

  MenteeMentorResponsibilitySearchResult:
      type: object
      properties:
        total:
          type: number
          format: integer
          description: The total.
        totalPages:
          type: number
          format: integer
          description: The total pages.
        entities:
          type: array
          items:
            $ref: '#/definitions/MenteeMentorResponsibility'

  MenteeMentorProgram:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      startDate:
         type: string
         description: The start date.
      endDate:
         type: string
         description: The end date.
      completed:
         type: string
         description: The completed flag.
      completedOn:
         type: number
         format: int32
         description: The completed on time with unix epoch format.
      requestStatus:
         type: string
         description: The request status.
      mentor:
        $ref: '#/definitions/Mentor'
      mentee:
        $ref: '#/definitions/Mentee'
      institutionalProgram:
        $ref: '#/definitions/InstitutionalProgram'
      mentorFeedback:
        $ref: '#/definitions/MentorFeedback'
      menteeFeedback:
        $ref: '#/definitions/MenteeFeedback'
      goals:
        type: array
        items:
         $ref: '#/definitions/MenteeMentorGoal'
      responsibilities:
        type: array
        items:
         $ref: '#/definitions/MenteeMentorResponsibility'
      documents:
        type: array
        items:
          $ref: '#/definitions/Document'
      usefulLinks:
        type: array
        items:
          $ref: '#/definitions/UsefulLink'

  MenteeFeedback:
    type: object
    properties:
      mentorScore:
        type: number
        format: integer
        description: The score.
      comment:
        type: string
        description: The comment.

  MentorFeedback:
    type: object
    properties:
      menteeScore:
        type: number
        format: integer
        description: The score.
      comment:
        type: string
        description: The comment.

  MenteeMentorProgramSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/MenteeMentorProgram'

  ProfessionalExperienceData:
    type: object

  MenteeMentorGoalSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/MenteeMentorGoal'

  MenteeMentorTaskSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/MenteeMentorTask'

  UsefulLink:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        title:
          type: string
          description: The title.
        address:
          type: string
          description: The address.

  Document:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        name:
          type: string
          description: The name.
        path:
          type: string
          description: The path.
        createdOn:
          type: number
          description: The created on time
        createdBy:
          type: number
          description: The created by user id.
        lastModifiedOn:
          type: number
          description: The last modified on time
        lastModifiedBy:
          type: number
          description: The last modified by user id.

  Goal:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      number:
        type: integer
        description: The number.
      subject:
        type: string
        description: The subject.
      description:
        type: string
        description: The description.
      durationInDays:
        type: integer
        description: The duration in days.
      institutionalProgramId:
        type: integer
        description: The institutional program id.
      tasks:
        type: array
        items:
          $ref: '#/definitions/Task'
      usefulLinks:
        type: array
        items:
         $ref: '#/definitions/UsefulLink'
      documents:
        type: array
        items:
          $ref: '#/definitions/Document'

  MenteeMentorGoal:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      completed:
        type: boolean
        description: The completed flag.
      completedOn:
        type: integer
        format: int32
        description: The completed on time with unix epoch format .
      menteeMentorProgramId:
        type: integer
        format: int32
        description: The mentee mentor program id.
      goal:
        $ref: '#/definitions/Goal'
      tasks:
        type: array
        items:
          $ref: '#/definitions/MenteeMentorTask'
      documents:
        type: array
        items:
          $ref: '#/definitions/Document'
      usefulLinks:
        type: array
        items:
          $ref: '#/definitions/UsefulLink'

  GoalSearchResult:
    type: object
    properties:
      total:
        type: number
        format: integer
        description: The total.
      totalPages:
        type: number
        format: integer
        description: The total pages.
      entities:
        type: array
        items:
          $ref: '#/definitions/Goal'

  Task:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      number:
        type: integer
        description: The number.
      description:
        type: string
        description: The description.
      durationInDays:
        type: integer
        description: The duration in days.
      mentorAssignment:
        type: boolean
        description: The mentor assignment flag.
      menteeAssignment:
        type: boolean
        description: The mentee assignment flag.
      goalId:
        type: integer
        description: The goal id.

  TaskSearchResult:
      type: object
      properties:
        total:
          type: number
          format: integer
          description: The total.
        totalPages:
          type: number
          format: integer
          description: The total pages.
        entities:
          type: array
          items:
            $ref: '#/definitions/Task'

  Activity:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: The id.
        institutionalProgramId:
          type: integer
          description: The institutional program id.
        objectId:
          type: integer
          description: The object id.
        description:
          type: string
          description: The description.
        activityType:
          type: string
          description: The activity type.
        global:
          type: boolean
          description: The global flag.
        menteeId:
          type: integer
          description: The mentee id.
        mentorId:
          type: integer
          description: The mentor id.
        createdOn:
          type: number
          description: The created on time
        createdBy:
          type: number
          description: The created by user id.
        lastModifiedOn:
          type: number
          description: The last modified on time
        lastModifiedBy:
          type: number
          description: The last modified by user id.
  ActivitySearchResult:
      type: object
      properties:
        total:
          type: number
          format: integer
          description: The total.
        totalPages:
          type: number
          format: integer
          description: The total pages.
        entities:
          type: array
          items:
            $ref: '#/definitions/Activity'

  MenteeMentorTask:
    type: object
    properties:
      id:
        type: integer
        format: int32
        description: The id.
      startDate:
        type: string
        description: The start date.
      endDate:
        type: string
        description: The end date.
      completed:
        type: boolean
        description: The completed flag.
      completedOn:
        type: integer
        format: int32
        description: The completed on time with unix epoch format .
      menteeMentorGoalId:
        type: integer
        format: int32
        description: The mentee mentor goal id.
      task:
        $ref: '#/definitions/Task'

  Error:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string